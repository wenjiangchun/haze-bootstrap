// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See https://js.arcgis.com/4.3/esri/copyright.txt for details.
//>>built
define(["require","exports"],function(m,n){return function(){function a(){this.elevationDirtyGraphicsQueue=[];this.elevationDirtyGraphicsSet={};this.elevationUpdateEventHandle=null;this.eventHandles=[];this.updateElevation=!1;this.graphicsCore=this.layerView=null}a.prototype.initialize=function(c,l,a,h){var b=this;this.layerView=c;this.graphicsCore=a;this.elevationChangedCallback=l;this.elevationUpdateEventHandle=h.on("elevation-change",function(c){return b.elevationUpdateHandler(c)});this.eventHandles.push(this.layerView.watch("suspended",
function(){return b.suspendedChange()}))};a.prototype.destroy=function(){this.elevationDirtyGraphicsSet=this.elevationDirtyGraphicsQueue=null;this.elevationUpdateEventHandle&&(this.elevationUpdateEventHandle.remove(),this.elevationUpdateEventHandle=null);this.eventHandles.forEach(function(c){return c.remove()});this.elevationChangedCallback=this.graphicsCore=this.layerView=this.eventHandles=null};a.prototype.clear=function(){this.elevationDirtyGraphicsSet={};this.elevationDirtyGraphicsQueue=[]};a.prototype.suspendedChange=
function(){!0===this.layerView.suspended?this.updateElevation=!1:!1===this.layerView.suspended&&this.updateElevation&&this.markAllGraphicsElevationDirty()};a.prototype.isUpdating=function(){return 0<this.elevationDirtyGraphicsQueue.length};a.prototype.numNodesUpdating=function(){return this.elevationDirtyGraphicsQueue.length};a.prototype.needsIdleUpdate=function(){return this.layerView.view.basemapTerrain&&0<this.elevationDirtyGraphicsQueue.length};a.prototype.idleUpdate=function(c){if(!c.done()){var a=
this.layerView.view,b=this.elevationDirtyGraphicsQueue.length;if(0<b){for(var h=this.graphicsCore.stageLayer.getId(),k=this.graphicsCore.labelStageLayer?this.graphicsCore.labelStageLayer.getId():null,e=0,d=0,d=0;d<b;d++){var f=this.elevationDirtyGraphicsQueue[d],g=this.graphicsCore.graphics[f];g&&g.alignWithElevation(a.basemapTerrain,a.renderCoordsHelper);delete this.elevationDirtyGraphicsSet[f];e++;if(20<=e){a._stage.processDirtyLayer(h);null!=k&&a._stage.processDirtyLayer(k);if(c.done())break;e=
0}}a._stage.processDirtyLayer(h);null!=k&&a._stage.processDirtyLayer(k);this.elevationDirtyGraphicsQueue.splice(0,d+1);a.labelManager.setDirty();this.layerView._evaluateUpdatingState()}}};a.prototype.markAllGraphicsElevationDirty=function(){for(var a in this.graphicsCore.graphics)this.markGraphicElevationDirty(this.graphicsCore.graphics[a].graphic.uid);this.layerView._evaluateUpdatingState()};a.prototype.markGraphicElevationDirty=function(a){this.elevationDirtyGraphicsSet[a]||(this.elevationDirtyGraphicsSet[a]=
!0,this.elevationDirtyGraphicsQueue.push(a))};a.prototype.elevationUpdateHandler=function(a){var c=this,b=a.extent;this.layerView.suspended?this.updateElevation||(a=this.graphicsCore.computedExtent)&&b[2]>a.xmin&&b[0]<a.xmax&&b[3]>a.ymin&&b[1]<a.ymax&&(this.updateElevation=!0):-Infinity===b[0]?this.markAllGraphicsElevationDirty():this.elevationChangedCallback(b,a.spatialReference,function(a,b){for(var e=!1,d=0;d<b;d++){var f=a[d],g=c.graphicsCore.graphics[f];g&&g.mustAlignToTerrain()&&(c.markGraphicElevationDirty(f),
e=!0)}e&&c.layerView._evaluateUpdatingState()})};return a}()});